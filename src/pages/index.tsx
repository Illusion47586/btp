import {
  Container,
  Card,
  Row,
  Text,
  Button,
  Input,
  Link,
  Spacer,
  useTheme,
  Loading,
  Modal,
} from "@nextui-org/react";
import Head from "next/head";
import { useState } from "react";
import { calSansFont } from "./_app";

import DropZone from "@/components/DropZone";
import { useDropStore } from "@/store/drop";
import Analyzer from "@/components/Analyzer";
import { useModelStore } from "@/store/model";

export default function Home() {
  const { theme } = useTheme();
  const [isModalOpen, changeModalStateTo] = useState(false);

  const { state, changeStateTo } = useModelStore();

  const [currentModel, setCurrentModel] = useState("colon");

  const { clearFiles, fileList } = useDropStore();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container
        as="main"
        display="flex"
        direction="column"
        justify="center"
        alignItems="center"
        style={{ height: "100vh" }}
      >
        <Text h1>Doctor&apos;s Helper</Text>
        <form
          onSubmit={(e) => {
            e.preventDefault();
            changeModalStateTo(true);
          }}
          style={{
            display: "flex",
            flexDirection: "column",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <select
            style={{
              background: theme!.colors.accents0.value,
              borderRadius: theme?.radii.md.value,
              minWidth: theme?.space[48].value,
              padding: theme?.space[7].value,
              fontSize: theme?.fontSizes.sm.value,
              borderWidth: theme?.borderWeights.normal.value,
              outline: "none",
              border: "none",
              textAlign: "center",
            }}
            onChange={(e) => {
              setCurrentModel(e.currentTarget.value);
            }}
          >
            <option value="colon">Colon Cancer</option>
            <option value="malaria">Malaria</option>
            <option value="kidneycyst">Kidney Cyst</option>
            <option value="tb">Tuberculosis</option>
          </select>
          <Spacer y={0.75} />
          <Button type="submit" color="gradient">
            {/* <Loading color="currentColor" size="sm" /> */}
            Submit
          </Button>
        </form>
        <Modal
          closeButton
          open={isModalOpen}
          onClose={() => {
            changeModalStateTo(false);
            clearFiles();
            changeStateTo("selecting");
          }}
        >
          <Modal.Header className={calSansFont.className}>
            <Text h3>Enter the required images</Text>
          </Modal.Header>
          <Modal.Body>
            {state === "selecting" ? (
              <DropZone />
            ) : (
              <Analyzer name={currentModel} />
            )}
          </Modal.Body>
          <Modal.Footer>
            <Button
              className={calSansFont.className}
              disabled={fileList.length === 0 || state === "analyzing"}
              onClick={() => {
                if (state === "selecting") {
                  changeStateTo("analyzing");
                } else if (state === "done") {
                  changeModalStateTo(false);
                }
              }}
            >
              {state === "selecting" ? (
                "Analyze Images"
              ) : state === "done" ? (
                "Close"
              ) : (
                <Loading color="currentColor" size="sm" />
              )}
            </Button>
          </Modal.Footer>
        </Modal>
      </Container>
    </>
  );
}
